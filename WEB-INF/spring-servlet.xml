<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
	  http://www.springframework.org/schema/jms  
    http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd

        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<context:component-scan base-package="com.bridgeit" />
	<mvc:annotation-driven />


	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- <property name="url" value="${aws.url}" /> -->
		<property name="url" value="${mysql.url}?createDatabaseIfNotExist=true" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.bridgeit.user.model.UserBean</value>
				<value>com.bridgeit.note.model.NoteBean</value>
				<value>com.bridgeit.note.model.Label</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<context:property-placeholder location="classpath:development.properties" />
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="port" value="${email.port}" />
		<property name="username" value="${email.username}" />
		<property name="password" value="${email.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${email.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${email.starttls}</prop>
			</props>
		</property>
	</bean>

	<bean id="noteDao" class="com.bridgeit.note.dao.NoteDaoImp"></bean>
	<bean class="com.bridgeit.note.service.NoteServiceImp"></bean>
	<bean class="com.bridgeit.user.model.MailImp"></bean>
	<bean class="com.bridgeit.user.service.UserServiceImp"></bean>
	<bean id="userDao" class="com.bridgeit.user.dao.UserDaoImp"></bean>
	<bean id="validator" class="com.bridgeit.util.Validation"></bean>
	<bean id="adminService" class="com.bridgeit.admin.service.AdminServiceImp"></bean>
	<bean id="adminDao" class="com.bridgeit.admin.dao.AdminDaoImp"></bean>
	<bean id="fbconnection" class="com.bridgeit.user.service.FacebookConnection"></bean>
	<bean id="googleconnection" class="com.bridgeit.user.service.GoogleConnection"></bean>


	
	<bean id="sendverificationemail" class="com.bridgeit.user.service.SendVerificationMail" />
	
	<bean id="tokenGenerator" class="com.bridgeit.util.TokenGenerator" />

	<bean id="verifyToken" class="com.bridgeit.util.VerifyToken" />
	
	<bean id="jwttokenGenerator" class="com.bridgeit.token.JwtTokenGenerator" />

	<bean id="jwtverifyToken" class="com.bridgeit.token.JwtTokenValidator" />
	

	<!-- <bean id="consumer" class="com.bridgeit.user.service.Consumer"/> -->
	<!-- <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"> 
		<constructor-arg name="strength" value="11"/> </bean> -->

	<mvc:resources location="/template/" mapping="/template/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/controller/" mapping="/controller/**" />
	<mvc:resources location="/service/" mapping="/service/**" />
	<mvc:resources location="/script/" mapping="/script/**" />
	<mvc:resources location="/bower_components/" mapping="/bower_components/**" />
	<mvc:resources location="/directive/" mapping="/directive/**" />
	<mvc:resources location="/images/" mapping="/images/**" />



	<!-- JMS Implementation -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<!-- brokerURL, You may have different IP or port -->
		<constructor-arg index="0" value="tcp://localhost:61616" />
	</bean>

	<!-- Pooled Spring connection factory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="amqConnectionFactory" />
	</bean>

	<!-- ======================================================= -->
	<!-- JMS Send, define default destination and JmsTemplate -->
	<!-- ======================================================= -->
	<!-- Default Destination Queue Definition -->
	<bean id="defaultDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- name of the queue -->
		<constructor-arg index="0" value="myQueue" />
	</bean>
	
	<bean id="defaultDestination2" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- name of the queue -->
		<constructor-arg index="0" value="NoteQueue" />
	</bean>

	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="defaultDestination" />
	</bean>
	
	<bean id="jmsNoteTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="defaultDestination2" />
	</bean>

	<!-- =============================================== -->
	<!-- JMS receive, define JmsListenerContainerFactory -->
	<!-- =============================================== -->
	<bean id="jmsListenerContainerFactory"
		class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="concurrency" value="3-10" />
	</bean>



	<bean id="producer" class="com.bridgeit.user.service.Producer" />
	<bean id="consumer" class="com.bridgeit.user.service.Consumer" />
	<bean id="elasticListener" class="com.bridgeit.elastic.ElasticListener" />

	<jms:listener-container container-type="default"
		connection-factory="connectionFactory" acknowledge="auto">
		<jms:listener destination="myQueue" ref="consumer" method="onMessage"></jms:listener>
		<jms:listener destination="NoteQueue" ref="elasticListener" method="onMessage"></jms:listener>

	</jms:listener-container>

	
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/userRegister"/>
			<mvc:exclude-mapping path="/activate/**"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/facebookLogin"/>
			<mvc:exclude-mapping path="/forgotpassword"/>
			<mvc:exclude-mapping path="/loginWithGoogle"/>
			<mvc:exclude-mapping path="/connectFB"/>
			<mvc:exclude-mapping path="/gettoken"/>
			<mvc:exclude-mapping path="/connectgoogle"/>
			<mvc:exclude-mapping path="/bower_components/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/controller/**"/>
			<mvc:exclude-mapping path="/script/**"/>
			<mvc:exclude-mapping path="/service/**"/>
			<mvc:exclude-mapping path="/directive/**"/>
			<mvc:exclude-mapping path="/template/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<bean id="accessInterceptor" class="com.bridgeit.user.filter.AccessInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->

		<bean id="sqsproducer" class="com.bridgeit.user.service.SQSProducer" />
		<bean id="sqsconsumer" class="com.bridgeit.user.service.SQSConsumer" />


<!-- 		//////////////////////////////////////////////////////////////// -->
		
		<bean id="CredentialsProviderBean" class="com.amazonaws.auth.DefaultAWSCredentialsProviderChain"/>
    
    <bean id="ClientBuilder" class="com.amazonaws.services.sqs.AmazonSQSClientBuilder" factory-method="standard">
        <property name="region" value="us-west-2"/>
        <property name="credentials" ref="CredentialsProviderBean"/>               
    </bean>
    
    <bean id="ProviderConfiguration" class="com.amazon.sqs.javamessaging.ProviderConfiguration">
        <property name="numberOfMessagesToPrefetch" value="5"/>
    </bean>
    
    <bean id="ConnectionFactory" class="com.amazon.sqs.javamessaging.SQSConnectionFactory">
        <constructor-arg ref="ProviderConfiguration" />
        <constructor-arg ref="ClientBuilder" />
    </bean>
    
    <bean id="Connection" class="javax.jms.Connection"
        factory-bean="ConnectionFactory"
        factory-method="createConnection"
        init-method="start"
        destroy-method="close" />
    
    <bean id="QueueName" class="java.lang.String">
        <constructor-arg value="fundoo-notes-sqs"/>
    </bean>
    
		
</beans>
